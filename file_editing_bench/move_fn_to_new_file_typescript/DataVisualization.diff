--- a/file_editing_bench/move_fn_to_new_file_typescript/task_files/DataVisualization.ts
+++ b/file_editing_bench/move_fn_to_new_file_typescript/DataVisualization.after.ts
@@ -1,4 +1,5 @@
 import { ChartData, ChartOptions } from './types';
+import { preprocessTimeSeriesData } from './timeSeriesUtils';
 
 export class DataVisualization {
     private chartData: ChartData;
@@ -10,25 +11,9 @@ export class DataVisualization {
     }
 
     public renderChart(): void {
-        const processedData = this.preprocessTimeSeriesData(this.chartData);
+        const processedData = preprocessTimeSeriesData(this.chartData);
         // ... rendering logic
     }
-
-    private preprocessTimeSeriesData(data: ChartData): ChartData {
-        const movingAverageWindow = 7;
-        const result = { ...data };
-        
-        if (Array.isArray(data.values)) {
-            result.values = data.values.map((value, index) => {
-                const windowStart = Math.max(0, index - movingAverageWindow + 1);
-                const windowValues = data.values.slice(windowStart, index + 1);
-                const sum = windowValues.reduce((acc, val) => acc + val, 0);
-                return sum / windowValues.length;
-            });
-        }
-
-        return result;
-    }
 }
 
 export interface ChartData {
