--- a/file_editing_bench/rename_variables_across_fn_python/task_files/student_processor.py
+++ b/file_editing_bench/rename_variables_across_fn_python/student_processor.after.py
@@ -1,26 +1,26 @@
-def calculate_final_score(d):
-    hw_scores = get_homework_scores(d)
-    exam_scores = get_exam_scores(d)
+def calculate_final_score(scores):
+    hw_scores = get_homework_scores(scores)
+    exam_scores = get_exam_scores(scores)
     
     total = sum(hw_scores) * 0.4 + sum(exam_scores) * 0.6
     return round(total, 2)
 
-def get_homework_scores(d):
-    return [score for score in d if score < 100]
+def get_homework_scores(scores):
+    return [score for score in scores if score < 100]
 
-def get_exam_scores(d):
-    return [score for score in d if score >= 100]
+def get_exam_scores(scores):
+    return [score for score in scores if score >= 100]
 
-def generate_report(d):
-    hw = get_homework_scores(d)
-    exams = get_exam_scores(d)
+def generate_report(scores):
+    hw = get_homework_scores(scores)
+    exams = get_exam_scores(scores)
     
     report = {
         'homework_avg': sum(hw) / len(hw) if hw else 0,
         'exam_avg': sum(exams) / len(exams) if exams else 0,
-        'final_score': calculate_final_score(d)
+        'final_score': calculate_final_score(scores)
     }
     return report
 
-def process_class_data(all_d):
-    return [generate_report(d) for d in all_d]
\ No newline at end of file
+def process_class_data(all_scores):
+    return [generate_report(scores) for scores in all_scores]
\ No newline at end of file
