--- a/file_editing_bench/extract_fn_to_helper_typescript/task_files/analytics.ts
+++ b/file_editing_bench/extract_fn_to_helper_typescript/analytics.after.ts
@@ -15,6 +15,18 @@ interface ProcessedAnalytics {
   hasRecentActivity: boolean;
 }
 
+function findMostFrequentEvent(eventCounts: Record<string, number>): string {
+  let maxCount = 0;
+  let mostFrequentEvent = '';
+  Object.entries(eventCounts).forEach(([eventType, count]) => {
+    if (count > maxCount) {
+      maxCount = count;
+      mostFrequentEvent = eventType;
+    }
+  });
+  return mostFrequentEvent;
+}
+
 export function processUserAnalytics(events: UserEvent[]): ProcessedAnalytics {
   const userId = events[0]?.userId || '';
   const eventCounts: Record<string, number> = {};
@@ -26,15 +38,7 @@ export function processUserAnalytics(events: UserEvent[]): ProcessedAnalytics {
     lastEventTime = Math.max(lastEventTime, event.timestamp);
   });
 
-  // Find the most frequent event
-  let maxCount = 0;
-  let mostFrequentEvent = '';
-  Object.entries(eventCounts).forEach(([eventType, count]) => {
-    if (count > maxCount) {
-      maxCount = count;
-      mostFrequentEvent = eventType;
-    }
-  });
+  const mostFrequentEvent = findMostFrequentEvent(eventCounts);
 
   // Calculate events per day
   const firstEventTime = Math.min(...events.map(e => e.timestamp));
