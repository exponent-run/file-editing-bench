--- file_editing_bench/swiftlang__swift__ConstantnessSemaDiagnostics/ConstantnessSemaDiagnostics.cpp
+++ file_editing_bench/swiftlang__swift__ConstantnessSemaDiagnostics/ConstantnessSemaDiagnostics.after.cpp
@@ -296,8 +296,8 @@
 
 /// Given a call \c callExpr, if some or all of its arguments are required to be
 /// constants, check that property on the arguments.
-static void diagnoseConstantArgumentRequirementOfCall(const CallExpr *callExpr,
-                                                      const ASTContext &ctx) {
+static void diagnoseConstantArgReqOfCall(const CallExpr *callExpr,
+                                         const ASTContext &ctx) {
   assert(callExpr && callExpr->getType() &&
          "callExpr should have a valid type");
   ValueDecl *calledDecl = callExpr->getCalledValue();
@@ -331,7 +331,7 @@
   }
 }
 
-void swift::diagnoseConstantArgumentRequirement(
+void swift::diagnoseConstantArgReq(
     const Expr *expr, const DeclContext *declContext) {
   class ConstantReqCallWalker : public ASTWalker {
     DeclContext *DC;
@@ -357,7 +357,7 @@
       if (!expr || isa<ErrorExpr>(expr) || !expr->getType())
         return Action::SkipNode(expr);
       if (auto *callExpr = dyn_cast<CallExpr>(expr)) {
-        diagnoseConstantArgumentRequirementOfCall(callExpr, DC->getASTContext());
+        diagnoseConstantArgReqOfCall(callExpr, DC->getASTContext());
       }
       return Action::Continue(expr);
     }
