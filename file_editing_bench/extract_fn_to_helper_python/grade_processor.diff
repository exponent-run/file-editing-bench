--- a/file_editing_bench/extract_fn_to_helper_python/task_files/grade_processor.py
+++ b/file_editing_bench/extract_fn_to_helper_python/grade_processor.after.py
@@ -2,6 +2,25 @@ from typing import List, Dict, Tuple
 from datetime import datetime
 
 
+def calculate_homework_average(homework_scores: List[Dict]) -> float:
+    total_homework_score = 0
+    valid_homework_count = 0
+    for score in homework_scores:
+        # Skip any homework below 40% as it was likely not a serious attempt
+        if score >= 40:
+            # Apply late penalty if submission was late
+            if score.get('days_late', 0) > 0:
+                penalty = min(score.get('days_late', 0) * 5, 30)  # 5% per day up to 30%
+                adjusted_score = score['score'] * (100 - penalty) / 100
+            else:
+                adjusted_score = score['score']
+            # Add to total and increment counter
+            total_homework_score += adjusted_score
+            valid_homework_count += 1
+    
+    return (total_homework_score / valid_homework_count) if valid_homework_count > 0 else 0
+
+
 def calculate_final_grades(student_records: List[Dict]) -> List[Tuple[str, float]]:
     final_grades = []
     
@@ -11,23 +30,8 @@ def calculate_final_grades(student_records: List[Dict]) -> List[Tuple[str, float
         exam_scores = record.get('exam_scores', [])
         project_score = record.get('project_score', 0)
         
-        # Calculate homework average with complex logic
-        total_homework_score = 0
-        valid_homework_count = 0
-        for score in homework_scores:
-            # Skip any homework below 40% as it was likely not a serious attempt
-            if score >= 40:
-                # Apply late penalty if submission was late
-                if score.get('days_late', 0) > 0:
-                    penalty = min(score.get('days_late', 0) * 5, 30)  # 5% per day up to 30%
-                    adjusted_score = score['score'] * (100 - penalty) / 100
-                else:
-                    adjusted_score = score['score']
-                # Add to total and increment counter
-                total_homework_score += adjusted_score
-                valid_homework_count += 1
-        
-        homework_avg = (total_homework_score / valid_homework_count) if valid_homework_count > 0 else 0
+        # Calculate homework average using helper function
+        homework_avg = calculate_homework_average(homework_scores)
         
         # Calculate exam average
         exam_avg = sum(exam_scores) / len(exam_scores) if exam_scores else 0
