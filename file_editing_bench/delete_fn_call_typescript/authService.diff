--- a/file_editing_bench/delete_fn_call_typescript/task_files/authService.ts
+++ b/file_editing_bench/delete_fn_call_typescript/authService.after.ts
@@ -1,8 +1,6 @@
 import { User, UserRole } from './types';
 
 export class AuthenticationService {
-  private readonly adminEmails = ['admin@company.com', 'root@company.com'];
-
   /**
    * Validates user permissions for accessing sensitive data
    * @param user The user attempting to access data
@@ -14,23 +12,10 @@ export class AuthenticationService {
       return false;
     }
 
-    // Check if user has special admin privileges first
-    if (this.isSpecialAdminUser(user.email)) {
-      return true;
-    }
-
     const hasPermission = await this.checkResourcePermissions(user.id, resourceId);
     return user.role === UserRole.ADMIN || hasPermission;
   }
 
-  /**
-   * Helper function to check if a user is in the special admins list
-   * This is a legacy check that should be removed as we migrate to role-based access
-   */
-  private isSpecialAdminUser(email: string): boolean {
-    return this.adminEmails.includes(email.toLowerCase());
-  }
-
   private async checkResourcePermissions(userId: string, resourceId: string): Promise<boolean> {
     // Implementation of permission checking
     return true;
